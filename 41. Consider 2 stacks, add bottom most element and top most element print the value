// C# program for
// the above approach
using System;
using System.Collections.Generic;
class GFG{
	
// Function to print stack elements
// from top to bottom with the
// order of elements unaltered
public static void PrintStack(Stack<int> s)
{
// If stack is empty
if (s.Count == 0)
	return;

// Extract top of the stack
int x = s.Peek();

// Pop the top element
s.Pop();

// Print the current top
// of the stack i.e., x
Console.Write(x + " ");

// Proceed to print
// remaining stack
PrintStack(s);

// Push the element back
s.Push(x);
}

// Driver code
public static void Main(String[] args)
{
Stack<int> s = new Stack<int>();

// Given stack s
s.Push(1);
s.Push(2);
s.Push(3);
s.Push(4);

// Function call
PrintStack(s);
}
}
